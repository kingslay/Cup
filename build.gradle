buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.0.RELEASE")
        classpath 'se.transmode.gradle:gradle-docker:1.2'
    }
}
group 'com.king.cup'
version '1.1.1'
apply plugin: 'docker'
apply plugin: 'idea'
apply plugin: 'spring-boot'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}
sourceSets {
    main {
        resources {
            srcDirs = ['src/main/public', 'src/main/resources','src/main/static']
        }
    }
}

dependencies {

//    debugCompile("org.springframework.boot:spring-boot-devtools")
    compile("org.springframework.boot:spring-boot-starter-web")
//    {exclude module: 'org.springframework.boot:spring-boot-starter-tomcat'}
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("mysql:mysql-connector-java")
    compile("org.springframework.boot:spring-boot-starter-data-rest")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-security")
    testCompile("junit:junit")
}

jar.dependsOn(':frontend:assemble')

task buildDocker(type: Docker) {
    baseImage = 'develar/java:latest'
    push = false
    tag = 'geowarin/boot-react'
    addFile {
        from jar
        rename {'app.jar'}
    }
    entryPoint(['java', '-Djava.security.egd=file:/dev/./urandom', '-jar', '/app.jar'])
    exposePort(8080)
}

buildDocker.dependsOn(build)

